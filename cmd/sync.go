// Code generated by cli-generator; DO NOT EDIT.
package cmd



import (
	
	handler "github.com/olegsu/trello-sync/pkg/sync"
	
	"github.com/spf13/cobra"
)

var syncCmdOptions struct {
	logs string
	store string
	trelloAppKey string
	trelloToken string
	trelloBoardId string
	googleServiceAccount string
	googleSpreadsheetId string
	googleSpreadsheetService string
	trelloService string
	
}

var syncCmd = &cobra.Command{
	Use:     "sync",

	RunE: func(cmd *cobra.Command, args []string) error {
		h := &handler.Handler{}
		return h.Handle(cnf)
	},
	Long: "Sync Trello board to Google Speadsheet",
	PreRun: func(cmd *cobra.Command, args []string) {
		rootCmd.PreRun(cmd, args)
		
		cnf.Set("logs", syncCmdOptions.logs)
		
		cnf.Set("store", syncCmdOptions.store)
		
		cnf.Set("trelloAppKey", syncCmdOptions.trelloAppKey)
		
		cnf.Set("trelloToken", syncCmdOptions.trelloToken)
		
		cnf.Set("trelloBoardId", syncCmdOptions.trelloBoardId)
		
		cnf.Set("googleServiceAccount", syncCmdOptions.googleServiceAccount)
		
		cnf.Set("googleSpreadsheetId", syncCmdOptions.googleSpreadsheetId)
		
		cnf.Set("googleSpreadsheetService", syncCmdOptions.googleSpreadsheetService)
		
		cnf.Set("trelloService", syncCmdOptions.trelloService)
		
	},
}




func init() {

	
	syncCmd.PersistentFlags().StringVar(&syncCmdOptions.logs, "logs", cnf.GetString("logs"), "Set path to directory where to store task logs")

	
	syncCmd.PersistentFlags().StringVar(&syncCmdOptions.store, "store", cnf.GetString("store"), "Set path to directory where to store openc store state")

	syncCmd.PersistentFlags().StringVar(&syncCmdOptions.trelloAppKey, "trello-app-key", cnf.GetString("trelloAppKey"), "")

	syncCmd.PersistentFlags().StringVar(&syncCmdOptions.trelloToken, "trello-token", cnf.GetString("trelloToken"), "")

	syncCmd.PersistentFlags().StringVar(&syncCmdOptions.trelloBoardId, "trello-board-id", cnf.GetString("trelloBoardId"), "")

	syncCmd.PersistentFlags().StringVar(&syncCmdOptions.googleServiceAccount, "google-service-account", cnf.GetString("googleServiceAccount"), "")

	syncCmd.PersistentFlags().StringVar(&syncCmdOptions.googleSpreadsheetId, "google-spreadsheet-id", cnf.GetString("googleSpreadsheetId"), "")

	syncCmd.PersistentFlags().StringVar(&syncCmdOptions.googleSpreadsheetService, "google-spreadsheet-service", cnf.GetString("googleSpreadsheetService"), "")

	syncCmd.PersistentFlags().StringVar(&syncCmdOptions.trelloService, "trello-service", cnf.GetString("trelloService"), "")
	rootCmd.AddCommand(syncCmd)
}